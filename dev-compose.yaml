version: '3'
services:
  traefik:
    image: traefik:v2.0.2
    container_name: traefik
    security_opt:
      - no-new-privileges:true
    networks:
      - traefik_default
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik.yml:/traefik.yml:ro
      - ./config/acme/acme.json:/acme.json
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.traefik.entrypoints=http"
      - "traefik.http.routers.traefik.rule=Host(`admin.${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.middlewares.traefik-auth.basicauth.users=admin:$$2y$$05$$0M37fViQ3uHTqkNl0c9C1.disDp5hKPRhVdDetC8MNZ11VXq6msly"
      - "traefik.http.middlewares.traefik-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.traefik.middlewares=traefik-https-redirect"
      - "traefik.http.routers.traefik-secure.entrypoints=https"
      - "traefik.http.routers.traefik-secure.rule=Host(`admin.${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.routers.traefik-secure.middlewares=traefik-auth"
      - "traefik.http.routers.traefik-secure.tls=true"
      - "traefik.http.routers.traefik-secure.tls.certresolver=http"
      - "traefik.http.routers.traefik-secure.service=api@internal"
  triplestore:
    image: nawer/blazegraph
    #image: metaphacts/blazegraph-basic
    environment:
      JAVA_XMS: 1024m
      JAVA_XMX: 2g
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.triplestore.entrypoints=http"
      - "traefik.http.routers.triplestore.rule=Host(`graph.${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.middlewares.triplestore-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.triplestore.middlewares=triplestore-https-redirect"
      - "traefik.http.routers.triplestore-secure.entrypoints=https"
      - "traefik.http.routers.triplestore-secure.rule=Host(`graph.${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.routers.triplestore-secure.tls=true"
      - "traefik.http.routers.triplestore-secure.tls.certresolver=http"
      - "traefik.http.routers.triplestore-secure.service=triplestore"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolmaxage=200"
      - "traefik.http.middlewares.triplestore-secure.headers.addvaryheader=true"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.triplestore-secure.headers.accesscontrolallowheaders=Authorization,Origin,Content-Type,Accept"
      - "traefik.http.middlewares.triplestore-secure.headers.customresponseheaders.Access-Control-Allow-Headers=Authorization,Origin,Content-Type,Accept"
      - "traefik.http.routers.triplestore-secure.middlewares=triplestore-secure@docker"
      - "traefik.http.services.triplestore.loadbalancer.server.port=9999"
      - "traefik.docker.network=traefik_default"
    volumes:
      - /data/blazegraph-data:/var/lib/blazegraph
    networks:
      - traefik_default
  s3system:
    image: minio/minio:latest
    ports:
      - 9000:9000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.s3system.entrypoints=http"
      - "traefik.http.routers.s3system.rule=Host(`oss.${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.middlewares.s3system-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.s3system.middlewares=s3system-https-redirect"
      - "traefik.http.routers.s3system-secure.entrypoints=https"
      - "traefik.http.routers.s3system-secure.rule=Host(`oss.${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.routers.s3system-secure.tls=true"
      - "traefik.http.routers.s3system-secure.tls.certresolver=http"
      - "traefik.http.routers.s3system-secure.service=s3system"
      - "traefik.http.services.s3system.loadbalancer.server.port=9000"
      - "traefik.docker.network=traefik_default"
    volumes:
      - /data/s3/Data:/data
    environment:
      - MINIO_ACCESS_KEY=`${S3KEY}`
      - MINIO_SECRET_KEY=`${S3SECRET}`
    networks:
      - traefik_default
    command: ["server", "/data"]
  mercantile:
    image: fils/mercantile:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mercantile.entrypoints=http"
      - "traefik.http.routers.mercantile.rule=Host(`api.${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.middlewares.mercantile-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.mercantile.middlewares=mercantile-https-redirect"
      - "traefik.http.routers.mercantile-secure.entrypoints=https"
      - "traefik.http.routers.mercantile-secure.rule=Host(`api.${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.routers.mercantile-secure.tls=true"
      - "traefik.http.routers.mercantile-secure.tls.certresolver=http"
      - "traefik.http.routers.mercantile-secure.service=mercantile"
      - "traefik.http.middlewares.mercantile-secure.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST"
      - "traefik.http.middlewares.mercantile-secure.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.mercantile-secure.headers.accesscontrolmaxage=200"
      - "traefik.http.middlewares.mercantile-secure.headers.addvaryheader=true"
      - "traefik.http.middlewares.mercantile-secure.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.mercantile-secure.headers.accesscontrolallowheaders=Authorization,Origin,Content-Type,Accept"
      - "traefik.http.middlewares.mercantile-secure.headers.customresponseheaders.Access-Control-Allow-Headers=Authorization,Origin,Content-Type,Accept"
      - "traefik.http.routers.mercantile-secure.middlewares=mercantile-secure@docker"
      - "traefik.http.services.mercantile.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik_default"
    networks:
      - traefik_default

  vue:
    image: fils/grow-general:latest
    environment:
      - S3ADDRESS=s3system:9000
      - S3BUCKET=sites
      - S3PREFIX=vue
      - DOMAIN=https://${HOST:?HOST environment varaible is required}/
      - S3KEY=`${S3KEY}`
      - S3SECRET=`${S3SECRET}`
      - NODE_ENV=${NODE_ENV}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vue.entrypoints=http"
      - "traefik.http.routers.vue.priority=10"
      - "traefik.http.routers.vue.rule=Host(`${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.middlewares.vue-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.vue.middlewares=vue-https-redirect"
      - "traefik.http.routers.vue-secure.entrypoints=https"
      - "traefik.http.routers.vue-secure.priority=11"
      - "traefik.http.routers.vue-secure.rule=Host(`dev.${HOST:?HOST environment is required}`)"
      - "traefik.http.routers.vue-secure.tls=true"
      - "traefik.http.routers.vue-secure.tls.certresolver=http"
      - "traefik.http.routers.vue-secure.service=vue"
      - "traefik.http.services.vue.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik_default"
      - "traefik.http.middlewares.vue.headers.accesscontrolallowmethods=GET,OPTIONS,POST"
      - "traefik.http.middlewares.vue.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.vue.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.vue.headers.addvaryheader=true"
    networks:
      - traefik_default

  vue-services:
    image: nsfearthcube/ec_facets_api_nodejs:latest
    #build: ./server
    environment:
      - NODE_ENV=production
      - S3ADDRESS=s3system:9000
      - S3BUCKET=sites
      - S3PREFIX=alpha
      - DOMAIN=https://${HOST:?HOST environment varaible is required}/
      - S3KEY=`${S3KEY}`
      - S3SECRET=`${S3SECRET}`
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alpha-server.entrypoints=http"
      - "traefik.http.routers.alpha-server.priority=90"
      - "traefik.http.routers.alpha-server.rule=( Host(`${HOST:?HOST environment variable is required}`) || Host(`dev.${HOST:?HOST environment variable is required}`) ) && PathPrefix(`/ec/api`)"
      - "traefik.http.middlewares.alpha-server-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.alpha-server.middlewares=alpha-server-https-redirect"
      - "traefik.http.routers.alpha-server-secure.priority=91"
      - "traefik.http.routers.alpha-server-secure.entrypoints=https"
      - "traefik.http.routers.alpha-server-secure.rule=( Host(`${HOST:?HOST environment variable is required}`) || Host(`dev.${HOST:?HOST environment variable is required}`) ) && PathPrefix(`/ec/api`)"
      - "traefik.http.routers.alpha-server-secure.tls=true"
      - "traefik.http.routers.alpha-server-secure.tls.certresolver=http"
      - "traefik.http.routers.alpha-server-secure.service=alpha-server"
      - "traefik.http.services.alpha-server.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik_default"
      - "traefik.http.middlewares.alpha-server.headers.accesscontrolallowmethods=GET,OPTIONS,POST"
      - "traefik.http.middlewares.alpha-server.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.alpha-server.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.alpha-server.headers.addvaryheader=true"
      - "traefik.http.middlewares.ecapi_prefix.StripPrefix.prefixes=/ec/api"
      - "traefik.http.routers.alpha-server-secure.middlewares=ecapi_prefix"
    networks:
      - traefik_default
  vue-client-alpha:
    image: nsfearthcube/ec_facets_client:latest
    restart: unless-stopped
    #build: ./client
    environment:
      - NODE_ENV=${NODE_ENV}
      - DOMAIN=https://${HOST:?HOST environment varaible is required}/
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.alpha.entrypoints=http"
      - "traefik.http.routers.alpha.priority=10"
      - "traefik.http.routers.alpha.rule=Host(`${HOST:?HOST environment varaible is required}`)"
      - "traefik.http.middlewares.alpha-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.alpha.middlewares=alpha-https-redirect"
      - "traefik.http.routers.alpha-secure.priority=11"
      - "traefik.http.routers.alpha-secure.entrypoints=https"
      - "traefik.http.routers.alpha-secure.rule=Host(`${HOST:?HOST environment is required}`)"
      - "traefik.http.routers.alpha-secure.tls=true"
      - "traefik.http.routers.alpha-secure.tls.certresolver=http"
      - "traefik.http.routers.alpha-secure.service=alpha"
      - "traefik.http.services.alpha.loadbalancer.server.port=8080"
      - "traefik.docker.network=traefik_default"
      - "traefik.http.middlewares.alpha.headers.accesscontrolallowmethods=GET,OPTIONS,POST"
      - "traefik.http.middlewares.alpha.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.alpha.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.alpha.headers.addvaryheader=true"
    networks:
      - traefik_default
  yasgui:
    image: erikap/yasgui
    restart: unless-stopped
    environment:
      DEFAULT_SPARQL_ENDPOINT: "https://graph.geodex.org/blazegraph/namespace/nabu/sparql"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sparqlgui.entrypoints=http"
      - "traefik.http.routers.sparqlgui.priority=92"
      - "traefik.http.routers.sparqlgui.rule=Host(`${HOST:?HOST environment varaible is required}` ) && PathPrefix(`/sparqlgui`) "
      #      - "traefik.http.routers.alpha.rule=Host(`${HOST:?HOST environment varaible is required}`) "
      - "traefik.http.routers.sparqlgui.service=sparqlgui"
      - "traefik.http.middlewares.sparqlgui-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.sparqlgui.middlewares=sparqlgui-https-redirect"
      - "traefik.http.routers.sparqlgui-secure.priority=94"
      - "traefik.http.routers.sparqlgui-secure.entrypoints=https"
      - "traefik.http.routers.sparqlgui-secure.rule=Host(`${HOST:?HOST environment is required}`) && PathPrefix(`/sparqlgui`)"
      - "traefik.http.routers.sparqlgui-secure.tls=true"
      - "traefik.http.routers.sparqlgui-secure.tls.certresolver=http"
      - "traefik.http.routers.sparqlgui-secure.service=sparqlgui"
      - "traefik.http.services.sparqlgui.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik_default"
      - "traefik.http.middlewares.sparqlgui.headers.accesscontrolallowmethods=GET,OPTIONS,POST"
      - "traefik.http.middlewares.sparqlgui.headers.accesscontrolalloworigin=*"
      - "traefik.http.middlewares.sparqlgui.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.sparqlgui.headers.addvaryheader=true"
      #      - "traefik.http.middlewares.client_prefix.stripprefixregex.regex=/client/[a-z0-9]+/[0-9]+/"
      - "traefik.http.middlewares.sparqlgui_prefix.StripPrefix.prefixes=/sparqlgui"
      - "traefik.http.routers.sparqlgui-secure.middlewares=sparqlgui_prefix"
    networks:
      - traefik_default
networks:
  traefik_default:
